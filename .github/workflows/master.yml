name: master

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  release:
    types: [published]

# https://help.github.com/en/actions/configuring-and-managing-workflows/using-environment-variables
# https://help.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions

jobs:
  build:

    runs-on: ubuntu-latest
    
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      ARTIFACTS_PATH: ${{ github.workspace }}/artifacts
      BUILD_VERSION_SUFFIX: build.${{ github.run_number }}

    steps:
    - name: Checkout
      uses: actions/checkout@v2
#    - name: Setup .NET Core
#      uses: actions/setup-dotnet@v1
#      with:
#        dotnet-version: 3.1.202
    - name: Extract SemVer from git tag
      id: semver
      run: |
        if [[ "${{ github.ref }}" =~ ^(refsp)/(pull)/(6)/(merge)$ ]]; then
            echo ::set-output name=release::true
            echo ::set-output name=major::${BASH_REMATCH[1]}
            echo ::set-output name=minor::${BASH_REMATCH[2]}
            echo ::set-output name=patch::${BASH_REMATCH[3]}
            echo ::set-output name=suffix::${BASH_REMATCH[4]}
        else
            echo ::set-output name=release::false
            echo ::set-output name=major::0
            echo ::set-output name=minor::1
            echo ::set-output name=patch::0
            echo ::set-output name=suffix::build.${{ github.run_number }}
        fi
        echo ::set-output name=build::${{ github.run_number }}

    - name: Show SemVer details
#      if: steps.semver.outputs.release == 'true'
      run: |
        echo ${{ github.ref }}
        echo Release: ${{ steps.semver.outputs.release }}
        echo ---------------------------
        echo Major: ${{ steps.semver.outputs.major }}
        echo Minor: ${{ steps.semver.outputs.minor }}
        echo Patch: ${{ steps.semver.outputs.patch }}
        echo Build: ${{ steps.semver.outputs.build }}
        echo Suffix: ${{ steps.semver.outputs.suffix }}
 #   - name: Install dependencies
 #     run: dotnet restore
 #   - name: Build
 #     run: dotnet build --configuration Release --no-restore --nologo -p:VersionSuffix=${{ env.BUILD_VERSION_SUFFIX }}
 #   - name: Test
 #     run: dotnet test --configuration Release --no-build --no-restore --nologo --verbosity normal -p:VersionSuffix=${{ env.BUILD_VERSION_SUFFIX }}
 #   - name: Pack
 #     run: dotnet pack --configuration Release --no-build --no-restore --nologo --output ${{ env.ARTIFACTS_PATH }} -p:VersionSuffix=${{ env.BUILD_VERSION_SUFFIX }}
  #  - name: Upload artifacts
 #     uses: actions/upload-artifact@v2
 #     with:
 #       name: artifacts-${{ env.BUILD_VERSION_SUFFIX }}+${{ github.sha }}
  #      path: ${{ env.ARTIFACTS_PATH }}
#    - name: Add GitHub NuGet feed source
#      run: dotnet nuget add source https://nuget.pkg.github.com/neliva/index.json --name GitHub --username neliva --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text
#    - name: Push to GitHub NuGet feed
#      run: dotnet nuget push *.nupkg --source GitHub --timeout 120 --disable-buffering true
#      working-directory: ./artifacts